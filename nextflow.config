profiles {
	PRODUCTION {
		manifest {
			name = 'PRODUCTION'
			description = 'Annotation workflow.'
			mainScript = 'main.nf'
			author = 'barib9667@uit.no'
			defaultBranch = 'main'
			homePage = 'https://github.com/ELIXIR-NO/ANNOTATIONWORKFLOW'
			version = '1.0'
		}
		params.defaultcpus = 16
		params.defaultmemory = '64 GB'
		params.defaulttime = '4 h'
		params.defaultmaxForks = 2
		params.maxErrors = 3
		params.errorStrategy = 'retry'
		params.maxRetries = 3
		params.debug = false
		params.trace_timestamp = new java.util.Date().format( 'yyyyMMddHHmmss')
		params.launchdir = "${launchDir}"
		params.ingresspath = "${launchDir}/INGRESS/"
		params.egresspath = "${launchDir}/EGRESS/"
		process.executor = 'local'
		conda.enabled = true
		nextflow.enable.moduleBinaries = true
		cleanup = true
		trace {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONWORKFLOW_trace_${params.trace_timestamp}.txt"
		    overwrite = true
		}
		report {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONWORKFLOW_report_${params.trace_timestamp}.html"
		    overwrite = true
		}
		timeline {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONWORKFLOW_timeline_${params.trace_timestamp}.html"
		    overwrite = true
		}
		dag {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONWORKFLOW_flowchart_${params.trace_timestamp}.html"
		    overwrite = true
		}
	}

	TEST {
		manifest {
			name = 'TEST'
			description = 'Annotation workflow.'
			mainScript = 'main.nf'
			author = 'barib9667@uit.no'
			defaultBranch = 'main'
			homePage = 'https://github.com/ELIXIR-NO/ANNOTATIONWORKFLOW'
			version = '1.0'
		}
		params.defaultcpus = 16
		params.defaultmemory = '64 GB'
		params.defaulttime = '4 h'
		params.defaultmaxForks = 2
		params.maxErrors = 0
		params.errorStrategy = 'terminate'
		params.maxRetries = 0
		params.debug = true
		params.trace_timestamp = new java.util.Date().format( 'yyyyMMddHHmmss')
		params.launchdir = "${launchDir}"
		params.ingresspath = "${launchDir}/INGRESS/"
		params.egresspath = "${launchDir}/EGRESS/"
		process.executor = 'local'
		conda.enabled = true
		nextflow.enable.moduleBinaries = true
		cleanup = false
		trace {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONWORKFLOW_trace_${params.trace_timestamp}.txt"
		    overwrite = true
		}
		report {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONWORKFLOW_report_${params.trace_timestamp}.html"
		    overwrite = true
		}
		timeline {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONWORKFLOW_timeline_${params.trace_timestamp}.html"
		    overwrite = true
		}
		dag {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONWORKFLOW_flowchart_${params.trace_timestamp}.html"
		    overwrite = true
		}
	}

	ANNOTATIONPIPELINE {
		manifest {
			name = 'Annotation'
			description = 'Annotation pipeline.'
			mainScript = 'main.nf'
			author = 'barib9667@uit.no'
			defaultBranch = 'master'
			homePage = 'https://github.com/ELIXIR-NO/ANNOTATIONWORKFLOW/modules/ANNOTATIONPIPELINE'
			version = '1.0'
		}
		params.defaultcpus = 16
		params.defaultmemory = '64 GB'
		params.defaulttime = '4 h'
		params.defaultmaxForks = 2
		params.maxErrors = 3
		params.errorStrategy = 'retry'
		params.maxRetries = 3
		params.debug = false
		params.trace_timestamp = new java.util.Date().format( 'yyyyMMddHHmmss')
		params.launchdir = "${launchDir}"
		params.ingresspath = "${launchDir}/INGRESS/"
		params.egresspath = "${launchDir}/EGRESS/"
		process.executor = 'local'
		conda.enabled = true
		nextflow.enable.moduleBinaries = true
		cleanup = true
		trace {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONPIPELINE_trace_${params.trace_timestamp}.txt"
		    overwrite = true
		}
		report {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONPIPELINE_report_${params.trace_timestamp}.html"
		    overwrite = true
		}
		timeline {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONPIPELINE_timeline_${params.trace_timestamp}.html"
		    overwrite = true
		}
		dag {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONPIPELINE_flowchart_${params.trace_timestamp}.html"
		    overwrite = true
		}
	}

	ANNOTATIONPIPELINE_test {
		manifest {
			name = 'Annotation'
			description = 'Annotation pipeline.'
			mainScript = 'main.nf'
			author = 'barib9667@uit.no'
			defaultBranch = 'master'
			homePage = 'https://github.com/ELIXIR-NO/ANNOTATIONWORKFLOW/modules/ANNOTATIONPIPELINE'
			version = '1.0'
		}
		params.defaultcpus = 16
		params.defaultmemory = '64 GB'
		params.defaulttime = '4 h'
		params.defaultmaxForks = 2
		params.maxErrors = 0
		params.errorStrategy = 'terminate'
		params.maxRetries = 0
		params.debug = true
		params.trace_timestamp = new java.util.Date().format( 'yyyyMMddHHmmss')
		params.launchdir = "${launchDir}"
		params.ingresspath = "${launchDir}/INGRESS/"
		params.egresspath = "${launchDir}/EGRESS/"
		process.executor = 'local'
		conda.enabled = true
		nextflow.enable.moduleBinaries = true
		cleanup = false
		trace {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONPIPELINE_trace_${params.trace_timestamp}.txt"
		    overwrite = true
		}
		report {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONPIPELINE_report_${params.trace_timestamp}.html"
		    overwrite = true
		}
		timeline {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONPIPELINE_timeline_${params.trace_timestamp}.html"
		    overwrite = true
		}
		dag {
		    enabled = true
		    file = "${params.egresspath}ANNOTATIONPIPELINE_flowchart_${params.trace_timestamp}.html"
		    overwrite = true
		}
	}
}